[project.urls]
GitHub    = "https://github.com/BrokenSource/BrokenSource"
Changelog = "https://brokensrc.dev/about/changelog"
Funding   = "https://brokensrc.dev/about/sponsors"
Contact   = "https://brokensrc.dev/about/contact"
Download  = "https://brokensrc.dev/get/releases"
Docs      = "https://brokensrc.dev/broken"
Homepage  = "https://brokensrc.dev"

[tool.hatch.version]
path = "Broken/Version.py"

[project]
name         = "broken-source"
description  = "ðŸš€ Broken Source Software Main Library"
authors      = [{name="Tremeschin", email="29046864+Tremeschin@users.noreply.github.com"}]
dynamic      = ["version"]
readme       = "readme.md"
license      = "AGPL-3.0"
requires-python = ">=3.10"
dependencies = [
    # Data Structures
    "attrs~=25.3.0",
    "intervaltree~=3.1.0",
    "pydantic~=2.11.3",
    "dotmap~=1.3.30",
    "toml~=0.10.2",
    "pyyaml~=6.0.2",
    "orjson~=3.10.18",
    "aenum~=3.1.15",
    "validators~=0.35.0",
    "diskcache~=5.6.3",
    "ordered-set~=4.1.0",
    "dill~=0.4.0",
    "numpy",
    # Utils
    "loguru~=0.7.3",
    "platformdirs~=4.3.8",
    "rich~=13.9.4",
    "arrow~=1.3.0",
    "distro~=1.9.0",
    "typer~=0.15.1",
    "tqdm~=4.67.1",
    "python-dotenv~=1.1.0",
    "cachetools~=5.5.2",
    "pyfiglet~=1.0.2",
    "halo~=0.0.31",
    "xxhash~=3.5.0",
    "pillow",
    # Internet
    "requests-cache~=1.2.1",
    "requests~=2.32.3",
    # Packaging
    "setuptools", # pretty_midi
    "uv~=0.7.5",
    "pip",
]

[dependency-groups]
dev = [
    "broken-source[extra]",
    # Website and documentation
    "mkdocs~=1.6.1",
    "mkdocstrings~=0.29.0",
    "mkdocstrings-python~=1.16.10",
    "mkdocs-gen-files~=0.5.0",
    "mkdocs-autorefs~=1.4.1",
    "mkdocs-section-index~=0.3.10",
    "mkdocs-material[imaging]~=9.6.11",
    "mkdocs-minify-plugin~=0.8.0",
    "mkdocs-include-markdown-plugin~=7.1.5",
    "mkdocs-site-urls~=0.2.0",
    "markdown-callouts~=0.4.0",
    "black~=25.1.0",
    # Development and Utilities
    "pytest-sugar~=1.0.0",
    "zstandard~=0.23.0",
    "hatchling~=1.27.0",
    # Profiling
    "snakeviz~=2.2.2",
    "tuna~=0.5.11",
]

[project.optional-dependencies]
shaderflow = [
    "watchdog~=6.0.0",
    "pytimeparse2~=1.7.1",
    "thefuzz~=0.22.1",
    # Math
    "numpy-quaternion>=2024.0.8",
    "opensimplex~=0.4.5.1",
    "scipy~=1.15.2",
    # OpenGL
    "glfw~=2.9.0",
    "glcontext~=3.0.0",
    "moderngl~=5.12.0",
    "moderngl-window~=3.1.1",
    "imgui-bundle>=1.5.2",
    "turbopipe~=1.2.2",
    "pygame~=2.6.1",
    # Audio / MIDI
    "soundcard~=0.4.4",
    "pyfluidsynth~=1.3.4",
    "midi2audio~=0.1.1",
    "pretty-midi~=0.2.10",
    "mido~=1.3.3",
]
gradio = [
    "transformers~=4.51.1",
    "fastapi~=0.115.12",
    "spaces~=0.35.0",
    # Note: Avoid 5.24 ~ 5.27, bad previews
    "gradio~=5.29.0",
]
extra = [
    "yt-dlp~=2025.4.30",
    "ollama~=0.4.8",
    # "modal~=0.74.12",
    # "runpod~=1.7.9",
]

[project.scripts]
broken = "Broken.__main__:main"

[tool.uv.pip]
compile-bytecode = false

[tool.uv]
default-groups = "all"
python-preference = "only-managed"
check-url = "https://pypi.org/simple"
compile-bytecode = false

[tool.uv.workspace]
members = [
    "Projects/*",
    "Meta/*/Projects/*",
    "Meta/*",
]

[tool.uv.sources]
broken-source = {workspace=true}
shaderflow    = {workspace=true}
depthflow     = {workspace=true}
pianola       = {workspace=true}
spectronote   = {workspace=true}

# # Hatchling

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["Broken"]

[tool.hatch.metadata.hooks.custom]
path = ".github/hatch_build.py"

[tool.hatch.build.targets.sdist]
exclude = ["*"]

# # Ruff

[tool.ruff.format]
exclude = ["*"]

[tool.ruff.lint]
ignore = [
    "F401", # Init files may re-export 'unused' stuff..
    "F403", # Star imports can be useful at times
    "E402", # Late/runtime imports are ok for torch
    "E701", # Rarely, this looks better than new line
    "E731", # Lambdas can be more readable at times
    "E741", # Don't tell the Electrical Engineers
]

# Tests

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "-p no:cacheprovider",
    "--no-header",
    "--tb=short",
    "-v",
    "-ra",
]
python_classes = "__PyTest__"
python_files = [
    "Core/Broken*.py",
]

# Others

[tool.pyright]
exclude = [".venv/**", "**/___*"]
typeCheckingMode = "off"
