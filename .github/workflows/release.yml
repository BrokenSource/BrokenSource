name: release
on:
  workflow_dispatch:
  push:
    paths:
      - "Broken/Version.py"

jobs:
  releases:
    name: Release (${{matrix.os}})
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        #, windows-latest, macos-14]
    steps:
      - uses: BrokenSource/BrokenSource@main
        name: Broken Setup

      # Linux cross-compilation

      - name: Install gcc aarch64
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: sudo apt-get install -y gcc-aarch64-linux-gnu

      # DepthFlow

      - name: Build DepthFlow
        if: ${{ env.GHA_PYAPP == 'True' }}
        run: uv run broken depthflow release --tarball --target all-host

      - name: Upload DepthFlow releases
        uses: actions/upload-artifact@v3
        with:
          name: DepthFlow
          path: Release/depthflow*

      # Pianola

      - name: Build Pianola
        if: ${{ env.GHA_PYAPP == 'True' }}
        run: uv run broken pianola release --tarball --target all-host

      - name: Upload Pianola releases
        uses: actions/upload-artifact@v3
        with:
          name: Pianola
          path: Release/pianola*

      # ShaderFlow

      - name: Build ShaderFlow
        if: ${{ env.GHA_PYAPP == 'True' }}
        run: uv run broken shaderflow release --tarball --target all-host

      - name: Upload ShaderFlow releases
        uses: actions/upload-artifact@v3
        with:
          name: ShaderFlow
          path: Release/shaderflow*

      # SpectroNote

      - name: Build SpectroNote
        if: ${{ env.GHA_PYAPP == 'True' }}
        run: uv run broken spectronote release --tarball --target all-host

      - name: Upload SpectroNote releases
        uses: actions/upload-artifact@v3
        with:
          name: SpectroNote
          path: Release/spectronote*

  wheels:
    name: Release Wheels
    runs-on: ubuntu-latest
    needs: releases
    steps:
      - uses: BrokenSource/BrokenSource@main
        name: Broken Setup

      - name: Build wheels
        run: uv run broken pypi

      - name: Publish wheels
        if: ${{ env.GHA_PYPI == 'True' }}
        run: uv run broken pypi --publish

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: Wheels
          path: Build/Wheels/*.whl

      - name: Create Release Tag
        if: ${{ env.GHA_TAG == 'True' }}
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag -a v$GHA_VERSION -m "Release v$GHA_VERSION"
          git push origin v$GHA_VERSION
